version: '3.3'

volumes:
  static:
  media:
  pg_data:


services:

  db:
    container_name: foodgram-db
    image: postgres:13
    env_file:
      - ../.env
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data/

  foodgram_frontend:
    container_name: foodgram-front
    env_file:
      - ../.env
    # image: mellolissa/foodgram_front:latest
    build: ../frontend
    command: cp -r /app/build/. /static/
    volumes:
      - static:/static
      # - ./frontend/:/app/result_build/

  
  foodgram_backend:
    container_name: foodgram-back
    # image: mellolissa/foodgram_back:latest
    build: ../backend/foodgram_backend
    env_file:
      - ../.env
    depends_on: 
      - db
    restart: always
    volumes:
      - static:/backend_static
      - media:/var/www/foodgram/media/

  foodgram-proxy:
    container_name: foodgram-proxy
    image: nginx:1.22.1
    env_file:
      - ../.env
    restart: always
    ports:
      - 8001:80
      #- 80:80
    volumes:
      - #./nginx.conf:/etc/nginx/conf.d/default.conf
      - #./docs/:/usr/share/nginx/html/api/docs/
      - static:/staticfiles/ 
      - media:/var/www/foodgram/media/
    depends_on:
      - backend
      - frontend



####
#version: '3.3'
#services:

  #frontend:
  #  build:
  #    context: ../frontend
  #    dockerfile: Dockerfile
  #  volumes:
  #    - ../frontend/:/app/result_build/
  #nginx:
  #  image: nginx:1.19.3
  #  ports:
  #    - "80:80"
  #  volumes:
  #    - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #    - ../frontend/build:/usr/share/nginx/html/
  #    - ../docs/:/usr/share/nginx/html/api/docs/
